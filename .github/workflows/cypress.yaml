name: Cypress Tests

on:
  push:
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: install opscenter dependencies
        run: |
          pip install poetry
          poetry install
      - name: Get suffix
        id: shell-command
        run:
          echo SUFFIX=$(echo ${GITHUB_HEAD_REF} | sed "s/\./_/g" | sed "s/-/_/g" | sed "s\/\_\g")_${GITHUB_RUN_ID} >> $GITHUB_ENV
      - name: set config
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SUFFIX: ${{ env.SUFFIX }}
        run: |
          mkdir $HOME/.snowsql
          OPSCENTER_DATABASE="DATABASE_CYPRESS_${SUFFIX}" envsubst < deploy/opscenter.config > $HOME/.snowsql/config
      - name: run deploy
        run: "poetry run python deploy/devdeploy.py -p opscenter"
      - name: run cypress setup
        run: "poetry run python deploy/cypress_setup.py -p opscenter"
      - name: run streamlit
        run: "poetry run streamlit run app/ui/Home.py &"
      - name: Wait one minute for materialization to happen
        run: sleep 60
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: yarn run cypress
          browser: chrome
          headless: true
          record: false
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-artifacts
          path: |
            cypress/videos/
            cypress/screenshots/
